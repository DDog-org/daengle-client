import { useRouter } from 'next/router';
import { useState } from 'react';
import { Text, TextButton } from '@daengle/design-system';
import {
  wrapper,
  headerContainer,
  tabContainer,
  tabButton,
  activeTabButton,
  userProfileContainer,
  profileButton,
  selectedProfileButton,
  optionContainer,
  listContainer,
  card,
  contentContainer,
  profileImage,
  cardContent,
  cardHeader,
  nameStyle,
  distanceStyle,
  tagsContainer,
  tagButtonStyle,
} from './index.styles';

interface UserEstimateContent {
  id: number;
  image: string;
  name: string;
  daengleMeter: number;
  shopName?: string | null;
  reservedDate: string;
  tags?: string[];
}

interface PetInfo {
  petId: number;
  petName: string;
  petImage: string;
  groomingEstimates: UserEstimateContent[];
  careEstimates: UserEstimateContent[];
}

interface Props {
  petInfos: PetInfo[];
}

export default function UserEstimateList({ petInfos }: Props): JSX.Element {
  const router = useRouter();
  // ÌïÑÌÑ∞ api GETÍ∞íÏúºÎ°ú Î≥ÄÍ≤ΩÎê† Í∞ÄÎä•ÏÑ±
  const [filterType, setFilterType] = useState<'ÎØ∏Ïö©ÏÇ¨' | 'Î≥ëÏõê'>('ÎØ∏Ïö©ÏÇ¨');
  const [selectedPetIndex, setSelectedPetIndex] = useState(0);

  const selectedPet = petInfos[selectedPetIndex];
  const estimateData =
    selectedPet &&
    (filterType === 'ÎØ∏Ïö©ÏÇ¨' ? selectedPet.groomingEstimates : selectedPet.careEstimates);

  const handleRequestClick = () => {
    // ÏûÑÏãú Í≤ΩÎ°ú
    router.push('/temporary-route');
  };

  return (
    <div css={wrapper}>
      <div css={headerContainer}>
        <Text typo="semibold01">Í≤¨Ï†Å</Text>
      </div>
      <div css={tabContainer}>
        <TextButton
          css={[tabButton, filterType === 'ÎØ∏Ïö©ÏÇ¨' && activeTabButton]}
          onClick={() => setFilterType('ÎØ∏Ïö©ÏÇ¨')}
        >
          ÎØ∏Ïö©ÏÇ¨
        </TextButton>
        <TextButton
          css={[tabButton, filterType === 'Î≥ëÏõê' && activeTabButton]}
          onClick={() => setFilterType('Î≥ëÏõê')}
        >
          Î≥ëÏõê
        </TextButton>
      </div>
      <div css={userProfileContainer}>
        {petInfos.map((pet, index) => (
          <TextButton
            key={pet.petId}
            css={[profileButton, index === selectedPetIndex && selectedProfileButton]}
            onClick={() => setSelectedPetIndex(index)}
            icons={{
              prefix: <img src={pet.petImage} alt={`${pet.petName} ÌîÑÎ°úÌïÑ`} />,
            }}
          >
            {pet.petName}
          </TextButton>
        ))}
      </div>
      <div css={optionContainer}>
        <TextButton
          onClick={() => {
            alert('Ìï¥Îãπ ÏöîÏ≤≠Ïóê ÎåÄÌïú Í≤¨Ï†ÅÏùÑ Í∑∏Îßå Î∞õÏúºÏãúÍ≤†ÏäµÎãàÍπå?');
          }}
        >
          <Text typo="medium02" color="gray500">
            Í≤¨Ï†Å Í∑∏Îßå Î∞õÍ∏∞
          </Text>
        </TextButton>
        <TextButton
          onClick={() => {
            handleRequestClick();
          }}
        >
          <Text typo="medium02" color="gray500">
            ÎÇ¥Í∞Ä Î≥¥ÎÇ∏ ÏöîÏ≤≠
          </Text>
        </TextButton>
      </div>
      <div css={listContainer}>
        {estimateData &&
          estimateData.map((data) => (
            <div key={data.id} css={card}>
              <div css={contentContainer}>
                <div css={cardHeader}>
                  <Text css={nameStyle} typo="medium01">
                    {data.name}
                  </Text>
                  <div css={distanceStyle(data.daengleMeter)}>üêæ {data.daengleMeter}m</div>
                </div>
                <div css={cardContent}>
                  <Text typo="regular04" color="gray400">
                    {data.shopName || ''}
                  </Text>
                  <Text typo="regular05" color="gray600">
                    {data.reservedDate}
                  </Text>
                  <div css={tagsContainer}>
                    {data.tags?.map((tag, index) => (
                      <TextButton
                        key={`${data.id}-${index}`}
                        css={tagButtonStyle}
                        onClick={() => {}}
                      >
                        #{tag}
                      </TextButton>
                    ))}
                  </div>
                </div>
              </div>
              <img src={data.image} alt={`${data.name} ÌîÑÎ°úÌïÑ`} css={profileImage} />
            </div>
          ))}
      </div>
    </div>
  );
}
